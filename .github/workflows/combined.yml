name: build and run the app
on: 
  push:
    branches: [ master ]
  

jobs: 

  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      
      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Set up environment variables
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > ./packages/db/.env

      - name: build and pushing the frontend
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/Dockerfile.frontend
          build-args: |
            DATABASE_URL=${{ secrets.DATABASE_URL }}
          push: true
          tags: vishu0210/frontend-backend:${{github.sha}}
      
      - name: build and push http-backend
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/Dockerfile.http-backend
          push: true
          tags: vishu0210/http-backend:${{github.sha}}

      - name: build and push ws-backend
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/Dockerfile.ws-backend
          push: true
          tags: vishu0210/ws-backend:${{github.sha}}
      
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.VM_IP }} >> ~/.ssh/known_hosts
          
      - name: Connect and update vm
        run: |
          ssh ${{ secrets.VM_USER}}@${{ secrets.VM_IP }} << EOF
            sudo apt-get update 
          EOF


      - name: Transfer files via SCP
        run: |
          scp docker-compose.yml .env-db ${{ secrets.VM_USER }}@${{ secrets.VM_IP }}:/home/${{ secrets.VM_USER }}/
          ssh ${{secrets.VM_USER}}@${{secrets.VM_IP}} << EOF
            cd /home/${{ secrets.VM_USER }}
            echo "" >> .env-db
            echo "GIT_SHA=${{ github.sha }}" >> .env-db
          EOF


      - name: Run Docker Compose
        run: |
          ssh ${{ secrets.VM_USER }}@${{ secrets.VM_IP }} << EOF
            cd /home/ubuntu
            docker compose down
            docker compose --env-file .env-db up -d
          EOF

